{
  "version": 3,
  "sources": ["../../node_modules/react-csv/src/components/Download.js", "../../node_modules/react-csv/src/core.js", "../../node_modules/react-csv/src/metaProps.js", "../../node_modules/react-csv/src/components/Link.jsx", "../../node_modules/react-csv/src/index.js"],
  "sourcesContent": ["import React from 'react';\nimport {buildURI} from '../core';\nimport {\n   defaultProps as commonDefaultProps,\n   propTypes as commonPropTypes} from '../metaProps';\nconst defaultProps = {\n  target: '_blank'\n};\n\n/**\n *\n * @example ../../sample-site/csvdownload.example.md\n */\nclass CSVDownload extends React.Component {\n\n  static defaultProps = Object.assign(\n    commonDefaultProps,\n    defaultProps\n  );\n\n  static propTypes = commonPropTypes;\n\n  constructor(props) {\n    super(props);\n    this.state={};\n  }\n\n  buildURI() {\n    return buildURI(...arguments);\n  }\n\n  componentDidMount(){\n    const {data, headers, separator, enclosingCharacter, uFEFF, target, specs, replace} = this.props;\n    this.state.page = window.open(\n        this.buildURI(data, uFEFF, headers, separator, enclosingCharacter), target, specs, replace\n    );\n  }\n\n  getWindow() {\n    return this.state.page;\n  }\n\n  render(){\n    return (null)\n  }\n}\n\nexport default CSVDownload;\n", "/**\n * Simple safari detection based on user agent test\n */\nexport const isSafari = () => /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\nexport const isJsons = ((array) => Array.isArray(array) && array.every(\n  row => (typeof row === 'object' && !(row instanceof Array))\n));\n\nexport const isArrays = ((array) => Array.isArray(array) && array.every(\n  row => Array.isArray(row)\n));\n\nexport const jsonsHeaders = ((array) => Array.from(\n  array.map(json => Object.keys(json))\n    .reduce((a, b) => new Set([...a, ...b]), [])\n));\n\nexport const jsons2arrays = (jsons, headers) => {\n  headers = headers || jsonsHeaders(jsons);\n\n  // allow headers to have custom labels, defaulting to having the header data key be the label\n  let headerLabels = headers;\n  let headerKeys = headers;\n  if (isJsons(headers)) {\n    headerLabels = headers.map((header) => header.label);\n    headerKeys = headers.map((header) => header.key);\n  }\n\n  const data = jsons.map((object) => headerKeys.map((header) => getHeaderValue(header, object)));\n  return [headerLabels, ...data];\n};\n\nexport const getHeaderValue = (property, obj) => {\n  const foundValue = property\n    .replace(/\\[([^\\]]+)]/g, \".$1\")\n    .split(\".\")\n    .reduce(function (o, p, i, arr) {\n      // if at any point the nested keys passed do not exist, splice the array so it doesnt keep reducing\n      const value = o[p];\n      if (value === undefined || value === null) {\n        arr.splice(1);\n      } else {\n        return value;\n      }\n    }, obj);\n  // if at any point the nested keys passed do not exist then looks for key `property` in object obj\n  return (foundValue === undefined) ? ((property in obj) ? obj[property] : '') : foundValue;\n}\n\nexport const elementOrEmpty = (element) =>\n  (typeof element === 'undefined' || element === null) ? '' : element;\n\nexport const joiner = ((data, separator = ',', enclosingCharacter = '\"') => {\n  return data\n    .filter(e => e)\n    .map(\n      row => row\n        .map((element) => elementOrEmpty(element))\n        .map(column => `${enclosingCharacter}${column}${enclosingCharacter}`)\n        .join(separator)\n    )\n    .join(`\\n`);\n});\n\nexport const arrays2csv = ((data, headers, separator, enclosingCharacter) =>\n  joiner(headers ? [headers, ...data] : data, separator, enclosingCharacter)\n);\n\nexport const jsons2csv = ((data, headers, separator, enclosingCharacter) =>\n  joiner(jsons2arrays(data, headers), separator, enclosingCharacter)\n);\n\nexport const string2csv = ((data, headers, separator, enclosingCharacter) =>\n  (headers) ? `${headers.join(separator)}\\n${data}` : data.replace(/\"/g, '\"\"')\n);\n\nexport const toCSV = (data, headers, separator, enclosingCharacter) => {\n  if (isJsons(data)) return jsons2csv(data, headers, separator, enclosingCharacter);\n  if (isArrays(data)) return arrays2csv(data, headers, separator, enclosingCharacter);\n  if (typeof data === 'string') return string2csv(data, headers, separator);\n  throw new TypeError(`Data should be a \"String\", \"Array of arrays\" OR \"Array of objects\" `);\n};\n\nexport const buildURI = ((data, uFEFF, headers, separator, enclosingCharacter) => {\n  const csv = toCSV(data, headers, separator, enclosingCharacter);\n  const type = isSafari() ? 'application/csv' : 'text/csv';\n  const blob = new Blob([uFEFF ? '\\uFEFF' : '', csv], { type });\n  const dataURI = `data:${type};charset=utf-8,${uFEFF ? '\\uFEFF' : ''}${csv}`;\n\n  const URL = window.URL || window.webkitURL;\n\n  return (typeof URL.createObjectURL === 'undefined')\n    ? dataURI\n    : URL.createObjectURL(blob);\n});\n", "import React from 'react';\nimport { string, array, oneOfType, bool, func } from 'prop-types';\n\n\nexport const propTypes = {\n  data: oneOfType([string, array, func]).isRequired,\n  headers: array,\n  target: string,\n  separator: string,\n  filename: string,\n  uFEFF: bool,\n  onClick: func,\n  asyncOnClick: bool,\n  enclosingCharacter: string\n};\n\nexport const defaultProps = {\n  separator: ',',\n  filename: 'generatedBy_react-csv.csv',\n  uFEFF: true,\n  asyncOnClick: false,\n  enclosingCharacter: '\"'\n};\n\nexport const PropsNotForwarded = [\n  `data`,\n  `headers`\n];\n", "import React from 'react';\nimport { buildURI, toCSV } from '../core';\nimport {\n  defaultProps as commonDefaultProps,\n  propTypes as commonPropTypes\n} from '../metaProps';\n\n/**\n *\n * @example ../../sample-site/csvlink.example.md\n */\nclass CSVLink extends React.Component {\n  static defaultProps = commonDefaultProps;\n  static propTypes = commonPropTypes;\n\n  constructor(props) {\n    super(props);\n    this.buildURI = this.buildURI.bind(this);\n  }\n\n  buildURI() {\n    return buildURI(...arguments);\n  }\n\n  /**\n   * In IE11 this method will trigger the file download\n   */\n  handleLegacy(event, isAsync = false) {\n    // If this browser is IE 11, it does not support the `download` attribute\n    if (window.navigator.msSaveOrOpenBlob) {\n      // Stop the click propagation\n      event.preventDefault();\n\n      const {\n        data,\n        headers,\n        separator,\n        filename,\n        enclosingCharacter,\n        uFEFF\n      } = this.props;\n\n      const csvData = isAsync && typeof data === 'function' ? data() : data;\n\n      let blob = new Blob([uFEFF ? '\\uFEFF' : '', toCSV(csvData, headers, separator, enclosingCharacter)]);\n      window.navigator.msSaveBlob(blob, filename);\n\n      return false;\n    }\n  }\n\n  handleAsyncClick(event) {\n    const done = proceed => {\n      if (proceed === false) {\n        event.preventDefault();\n        return;\n      }\n      this.handleLegacy(event, true);\n    };\n\n    this.props.onClick(event, done);\n  }\n\n  handleSyncClick(event) {\n    const stopEvent = this.props.onClick(event) === false;\n    if (stopEvent) {\n      event.preventDefault();\n      return;\n    }\n    this.handleLegacy(event);\n  }\n\n  handleClick() {\n    return event => {\n      if (typeof this.props.onClick === 'function') {\n        return this.props.asyncOnClick\n          ? this.handleAsyncClick(event)\n          : this.handleSyncClick(event);\n      }\n      this.handleLegacy(event);\n    };\n  }\n\n  render() {\n    const {\n      data,\n      headers,\n      separator,\n      filename,\n      uFEFF,\n      children,\n      onClick,\n      asyncOnClick,\n      enclosingCharacter,\n      ...rest\n    } = this.props;\n\n    const isNodeEnvironment = typeof window === 'undefined';\n    const href = isNodeEnvironment ? '' : this.buildURI(data, uFEFF, headers, separator, enclosingCharacter)\n\n    return (\n      <a\n        download={filename}\n        {...rest}\n        ref={link => (this.link = link)}\n        target=\"_self\"\n        href={href}\n        onClick={this.handleClick()}\n      >\n        {children}\n      </a>\n    );\n  }\n}\n\nexport default CSVLink;\n", "import Download from './components/Download';\nimport Link from './components/Link';\n\nexport const CSVDownload = Download;\nexport const CSVLink = Link;\n"],
  "mappings": "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",
  "names": ["import_react", "isSafari", "isJsons", "array", "row", "isArrays", "jsonsHeaders", "json", "a", "b", "jsons2arrays", "jsons", "headers", "headerLabels", "headerKeys", "header", "data", "object", "getHeaderValue", "property", "obj", "foundValue", "p", "i", "arr", "value", "elementOrEmpty", "element", "joiner", "separator", "enclosingCharacter", "e", "column", "arrays2csv", "jsons2csv", "string2csv", "toCSV", "buildURI", "uFEFF", "csv", "type", "blob", "dataURI", "URL", "import_react", "import_prop_types", "propTypes", "defaultProps", "defaultProps", "CSVDownload", "React", "propTypes", "props", "buildURI", "data", "headers", "separator", "enclosingCharacter", "uFEFF", "target", "specs", "replace", "Download_default", "import_react", "import_jsx_runtime", "CSVLink", "React", "defaultProps", "propTypes", "props", "buildURI", "event", "isAsync", "data", "headers", "separator", "filename", "enclosingCharacter", "uFEFF", "csvData", "blob", "toCSV", "done", "proceed", "children", "onClick", "asyncOnClick", "rest", "href", "link", "Link_default", "CSVDownload", "Download_default", "CSVLink", "Link_default"]
}
