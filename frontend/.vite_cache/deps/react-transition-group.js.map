{
  "version": 3,
  "sources": ["../../node_modules/@babel/runtime/helpers/esm/extends.js", "../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js", "../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js", "../../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js", "../../node_modules/react-transition-group/esm/CSSTransition.js", "../../node_modules/dom-helpers/esm/hasClass.js", "../../node_modules/dom-helpers/esm/addClass.js", "../../node_modules/dom-helpers/esm/removeClass.js", "../../node_modules/react-transition-group/esm/Transition.js", "../../node_modules/react-transition-group/esm/config.js", "../../node_modules/react-transition-group/esm/utils/PropTypes.js", "../../node_modules/react-transition-group/esm/TransitionGroupContext.js", "../../node_modules/react-transition-group/esm/utils/reflow.js", "../../node_modules/react-transition-group/esm/ReplaceTransition.js", "../../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js", "../../node_modules/react-transition-group/esm/TransitionGroup.js", "../../node_modules/react-transition-group/esm/utils/ChildMapping.js", "../../node_modules/react-transition-group/esm/SwitchTransition.js"],
  "sourcesContent": ["function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };", "function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };", "function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };", "import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;", "/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}", "import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}", "function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;", "export default {\n  disabled: false\n};", "import PropTypes from 'prop-types';\nexport var timeoutsShape = process.env.NODE_ENV !== 'production' ? PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n  enter: PropTypes.number,\n  exit: PropTypes.number,\n  appear: PropTypes.number\n}).isRequired]) : null;\nexport var classNamesShape = process.env.NODE_ENV !== 'production' ? PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n  enter: PropTypes.string,\n  exit: PropTypes.string,\n  active: PropTypes.string\n}), PropTypes.shape({\n  enter: PropTypes.string,\n  enterDone: PropTypes.string,\n  enterActive: PropTypes.string,\n  exit: PropTypes.string,\n  exitDone: PropTypes.string,\n  exitActive: PropTypes.string\n})]) : null;", "import React from 'react';\nexport default React.createContext(null);", "export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport TransitionGroup from './TransitionGroup';\n/**\n * The `<ReplaceTransition>` component is a specialized `Transition` component\n * that animates between two children.\n *\n * ```jsx\n * <ReplaceTransition in>\n *   <Fade><div>I appear first</div></Fade>\n *   <Fade><div>I replace the above</div></Fade>\n * </ReplaceTransition>\n * ```\n */\n\nvar ReplaceTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ReplaceTransition, _React$Component);\n\n  function ReplaceTransition() {\n    var _this;\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;\n\n    _this.handleEnter = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _this.handleLifecycle('onEnter', 0, args);\n    };\n\n    _this.handleEntering = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return _this.handleLifecycle('onEntering', 0, args);\n    };\n\n    _this.handleEntered = function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return _this.handleLifecycle('onEntered', 0, args);\n    };\n\n    _this.handleExit = function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      return _this.handleLifecycle('onExit', 1, args);\n    };\n\n    _this.handleExiting = function () {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      return _this.handleLifecycle('onExiting', 1, args);\n    };\n\n    _this.handleExited = function () {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      return _this.handleLifecycle('onExited', 1, args);\n    };\n\n    return _this;\n  }\n\n  var _proto = ReplaceTransition.prototype;\n\n  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {\n    var _child$props;\n\n    var children = this.props.children;\n    var child = React.Children.toArray(children)[idx];\n    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);\n\n    if (this.props[handler]) {\n      var maybeNode = child.props.nodeRef ? undefined : ReactDOM.findDOMNode(this);\n      this.props[handler](maybeNode);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        inProp = _this$props.in,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\"]);\n\n    var _React$Children$toArr = React.Children.toArray(children),\n        first = _React$Children$toArr[0],\n        second = _React$Children$toArr[1];\n\n    delete props.onEnter;\n    delete props.onEntering;\n    delete props.onEntered;\n    delete props.onExit;\n    delete props.onExiting;\n    delete props.onExited;\n    return /*#__PURE__*/React.createElement(TransitionGroup, props, inProp ? React.cloneElement(first, {\n      key: 'first',\n      onEnter: this.handleEnter,\n      onEntering: this.handleEntering,\n      onEntered: this.handleEntered\n    }) : React.cloneElement(second, {\n      key: 'second',\n      onEnter: this.handleExit,\n      onEntering: this.handleExiting,\n      onEntered: this.handleExited\n    }));\n  };\n\n  return ReplaceTransition;\n}(React.Component);\n\nReplaceTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  in: PropTypes.bool.isRequired,\n  children: function children(props, propName) {\n    if (React.Children.count(props[propName]) !== 2) return new Error(\"\\\"\" + propName + \"\\\" must be exactly two transition components.\");\n    return null;\n  }\n} : {};\nexport default ReplaceTransition;", "function _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nexport { _assertThisInitialized as default };", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;", "import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}", "import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nvar _leaveRenders, _enterRenders;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ENTERED, ENTERING, EXITING } from './Transition';\nimport TransitionGroupContext from './TransitionGroupContext';\n\nfunction areChildrenDifferent(oldChildren, newChildren) {\n  if (oldChildren === newChildren) return false;\n\n  if (React.isValidElement(oldChildren) && React.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Enum of modes for SwitchTransition component\n * @enum { string }\n */\n\n\nexport var modes = {\n  out: 'out-in',\n  in: 'in-out'\n};\n\nvar callHook = function callHook(element, name, cb) {\n  return function () {\n    var _element$props;\n\n    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);\n    cb();\n  };\n};\n\nvar leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {\n  var current = _ref.current,\n      changeState = _ref.changeState;\n  return React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERING, null);\n    })\n  });\n}, _leaveRenders[modes.in] = function (_ref2) {\n  var current = _ref2.current,\n      changeState = _ref2.changeState,\n      children = _ref2.children;\n  return [current, React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERING);\n    })\n  })];\n}, _leaveRenders);\nvar enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {\n  var children = _ref3.children,\n      changeState = _ref3.changeState;\n  return React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  });\n}, _enterRenders[modes.in] = function (_ref4) {\n  var current = _ref4.current,\n      children = _ref4.children,\n      changeState = _ref4.changeState;\n  return [React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  }), React.cloneElement(children, {\n    in: true\n  })];\n}, _enterRenders);\n/**\n * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).\n * You can use it when you want to control the render between state transitions.\n * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.\n *\n * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.\n * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.\n *\n * **Note**: If you want the animation to happen simultaneously\n * (that is, to have the old child removed and a new child inserted **at the same time**),\n * you should use\n * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)\n * instead.\n *\n * ```jsx\n * function App() {\n *  const [state, setState] = useState(false);\n *  return (\n *    <SwitchTransition>\n *      <CSSTransition\n *        key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n *        classNames='fade'\n *      >\n *        <button onClick={() => setState(state => !state)}>\n *          {state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        </button>\n *      </CSSTransition>\n *    </SwitchTransition>\n *  );\n * }\n * ```\n *\n * ```css\n * .fade-enter{\n *    opacity: 0;\n * }\n * .fade-exit{\n *    opacity: 1;\n * }\n * .fade-enter-active{\n *    opacity: 1;\n * }\n * .fade-exit-active{\n *    opacity: 0;\n * }\n * .fade-enter-active,\n * .fade-exit-active{\n *    transition: opacity 500ms;\n * }\n * ```\n */\n\nvar SwitchTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(SwitchTransition, _React$Component);\n\n  function SwitchTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      status: ENTERED,\n      current: null\n    };\n    _this.appeared = false;\n\n    _this.changeState = function (status, current) {\n      if (current === void 0) {\n        current = _this.state.current;\n      }\n\n      _this.setState({\n        status: status,\n        current: current\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = SwitchTransition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n  };\n\n  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (props.children == null) {\n      return {\n        current: null\n      };\n    }\n\n    if (state.status === ENTERING && props.mode === modes.in) {\n      return {\n        status: ENTERING\n      };\n    }\n\n    if (state.current && areChildrenDifferent(state.current, props.children)) {\n      return {\n        status: EXITING\n      };\n    }\n\n    return {\n      current: React.cloneElement(props.children, {\n        in: true\n      })\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        mode = _this$props.mode,\n        _this$state = this.state,\n        status = _this$state.status,\n        current = _this$state.current;\n    var data = {\n      children: children,\n      current: current,\n      changeState: this.changeState,\n      status: status\n    };\n    var component;\n\n    switch (status) {\n      case ENTERING:\n        component = enterRenders[mode](data);\n        break;\n\n      case EXITING:\n        component = leaveRenders[mode](data);\n        break;\n\n      case ENTERED:\n        component = current;\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: {\n        isMounting: !this.appeared\n      }\n    }, component);\n  };\n\n  return SwitchTransition;\n}(React.Component);\n\nSwitchTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Transition modes.\n   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.\n   * `in-out`: New element transitions in first, then when complete, the current element transitions out.\n   *\n   * @type {'out-in'|'in-out'}\n   */\n  mode: PropTypes.oneOf([modes.in, modes.out]),\n\n  /**\n   * Any `Transition` or `CSSTransition` component.\n   */\n  children: PropTypes.oneOfType([PropTypes.element.isRequired])\n} : {};\nSwitchTransition.defaultProps = {\n  mode: modes.out\n};\nexport default SwitchTransition;"],
  "mappings": "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",
  "names": ["_extends", "n", "e", "t", "r", "_objectWithoutPropertiesLoose", "e", "t", "n", "_setPrototypeOf", "t", "e", "_inheritsLoose", "t", "o", "_setPrototypeOf", "import_prop_types", "hasClass", "element", "className", "addClass", "element", "className", "hasClass", "replaceClassName", "origClass", "classToRemove", "removeClass", "element", "className", "import_react", "import_prop_types", "import_react", "import_react_dom", "config_default", "import_prop_types", "timeoutsShape", "PropTypes", "classNamesShape", "import_react", "TransitionGroupContext_default", "React", "forceReflow", "node", "UNMOUNTED", "EXITED", "ENTERING", "ENTERED", "EXITING", "Transition", "_React$Component", "_inheritsLoose", "props", "context", "_this", "parentGroup", "appear", "initialStatus", "_ref", "prevState", "nextIn", "_proto", "prevProps", "nextStatus", "status", "timeout", "exit", "enter", "mounting", "node", "ReactDOM", "forceReflow", "_this2", "appearing", "_ref2", "maybeNode", "maybeAppearing", "timeouts", "enterTimeout", "config_default", "_this3", "nextState", "callback", "_this4", "active", "event", "handler", "doesNotHaveTimeoutOrListener", "_ref3", "maybeNextCallback", "_this$props", "children", "_in", "_mountOnEnter", "_unmountOnExit", "_appear", "_enter", "_exit", "_timeout", "_addEndListener", "_onEnter", "_onEntering", "_onEntered", "_onExit", "_onExiting", "_onExited", "_nodeRef", "childProps", "_objectWithoutPropertiesLoose", "React", "TransitionGroupContext_default", "PropTypes", "propValue", "key", "componentName", "location", "propFullName", "secret", "value", "pt", "timeoutsShape", "_len", "args", "_key", "noop", "Transition_default", "_addClass", "node", "classes", "c", "addClass", "removeClass", "CSSTransition", "_React$Component", "_inheritsLoose", "_this", "_len", "args", "_key", "maybeNode", "maybeAppearing", "_this$resolveArgument", "appearing", "_this$resolveArgument2", "type", "_this$resolveArgument3", "_this$resolveArgument4", "_this$resolveArgument5", "_this$resolveArgument6", "classNames", "isStringClassNames", "prefix", "baseClassName", "activeClassName", "doneClassName", "_proto", "phase", "className", "_this$getClassNames", "forceReflow", "_this$appliedClasses$", "_this$props", "_", "props", "_objectWithoutPropertiesLoose", "React", "Transition_default", "_extends", "classNamesShape", "PropTypes", "CSSTransition_default", "import_prop_types", "import_react", "import_react_dom", "_assertThisInitialized", "e", "import_prop_types", "import_react", "import_react", "getChildMapping", "children", "mapFn", "mapper", "child", "result", "c", "mergeChildMappings", "prev", "next", "getValueForKey", "key", "nextKeysPending", "pendingKeys", "prevKey", "i", "childMapping", "nextKey", "pendingNextKey", "getProp", "prop", "props", "getInitialChildMapping", "onExited", "getNextChildMapping", "nextProps", "prevChildMapping", "nextChildMapping", "hasPrev", "hasNext", "prevChild", "isLeaving", "values", "obj", "k", "defaultProps", "child", "TransitionGroup", "_React$Component", "_inheritsLoose", "props", "context", "_this", "handleExited", "_assertThisInitialized", "_proto", "nextProps", "_ref", "prevChildMapping", "firstRender", "getInitialChildMapping", "getNextChildMapping", "node", "currentChildMapping", "getChildMapping", "state", "children", "_extends", "_this$props", "Component", "childFactory", "_objectWithoutPropertiesLoose", "contextValue", "React", "TransitionGroupContext_default", "PropTypes", "TransitionGroup_default", "ReplaceTransition", "_React$Component", "_inheritsLoose", "_this", "_len", "_args", "_key", "_len2", "args", "_key2", "_len3", "_key3", "_len4", "_key4", "_len5", "_key5", "_len6", "_key6", "_len7", "_key7", "_proto", "handler", "idx", "originalArgs", "_child$props", "children", "child", "React", "maybeNode", "ReactDOM", "_this$props", "inProp", "props", "_objectWithoutPropertiesLoose", "_React$Children$toArr", "first", "second", "TransitionGroup_default", "PropTypes", "propName", "ReplaceTransition_default", "import_react", "import_prop_types", "_leaveRenders", "_enterRenders", "areChildrenDifferent", "oldChildren", "newChildren", "React", "modes", "callHook", "element", "name", "cb", "_element$props", "leaveRenders", "_ref", "current", "changeState", "ENTERING", "_ref2", "children", "enterRenders", "_ref3", "ENTERED", "_ref4", "SwitchTransition", "_React$Component", "_inheritsLoose", "_this", "_len", "args", "_key", "status", "_proto", "props", "state", "EXITING", "_this$props", "mode", "_this$state", "data", "component", "TransitionGroupContext_default", "PropTypes", "SwitchTransition_default"]
}
